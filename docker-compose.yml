services:

  db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    ports:
      - 5432:5432
    networks:
      backend_network:
        ipv4_address: 172.20.0.2

  pgadmin:
    image: dpage/pgadmin4
    env_file:
      - ./.env
    ports:
      - 5050:80
    networks:
      backend_network:
        ipv4_address: 172.20.0.5
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  web:
    environment:
        - PYTHONUNBUFFERED=1
        - FORCE_COLOR=true
        - DJANGO_FORCE_COLOR=true
        - DJANGO_COLORS=light
    build: 
      context: ./backend
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - /srv/peersphere_media:/backend/media
      - /srv/peersphere_static:/srv/peersphere_static
      - ./backend:/backend
    ports:
      - "8000:8000"
    networks:
      frontend_network:
        ipv4_address: 172.19.0.3
      backend_network:
        ipv4_address: 172.20.0.6
    env_file:
      - ./.env
    depends_on:
      - db
      - redis


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    # volumes:
    #   - ./frontend:/app
    #   - /app/node_modules
    environment:
      - FORCE_COLOR=true
      - CHOKIDAR_USEPOLLING=true
      - VITE_HMR=true
      - HOST=0.0.0.0
    ports:
      - "8081:8081"
    networks:
      frontend_network:
        ipv4_address: 172.19.0.4
    depends_on:
      - web

  redis:
      image: redis:alpine
      ports:
        - "6379:6379"
      networks:
        backend_network:
          ipv4_address: 172.20.0.4

  celery:
    build:
      context: ./backend
    command: celery -A backend worker --loglevel=info
    volumes:
      - ./backend:/backend
    networks:
      - backend_network
    depends_on:
      - web
      - redis
    env_file:
      - ./.env

  beat:
    build:
      context: ./backend
    command: celery -A backend beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./backend:/backend
    networks:
      - backend_network
    depends_on:
      - web
      - redis
    env_file:
      - ./.env

networks:
  frontend_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.19.0.0/16

  backend_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
  pgadmin_data:
  peersphere_static:
    external: true
  
